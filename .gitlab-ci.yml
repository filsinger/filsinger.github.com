image: jekyll/builder

variables:
  JEKYLL_ENV: production

cache:
  paths:
    - vendor/

before_script:
  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - mkdir -p ~/.ssh
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Assuming you created the SSH_KNOWN_HOSTS variable, uncomment the
  ## following two lines.
  ##
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  ##
  ## bundle install
  ##
  - bundle install --path vendor

stages:
  - build
  - deploy

# markdownlint:
#   stage: build
#   image: pipelinecomponents/markdownlint:latest
#   before_script:
#     - echo "Preparing to lint"
#   script:
#     - mdl --style all --warnings _posts/
#   allow_failure: true

build:
  stage: build
  script:
    - bundle exec jekyll build -d public
  artifacts:
    paths:
      - public

deploy_review:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Deploy a review"
    - ssh $SSH_USERNAME@filsinger.me 'mkdir -p public/filsinger.me/review/$CI_ENVIRONMENT_SLUG'
    - rsync -r public/* $SSH_USERNAME@filsinger.me:public/filsinger.me/review/$CI_ENVIRONMENT_SLUG
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://staging.filsinger.me/review/$CI_ENVIRONMENT_SLUG/
  only:
    - branches
  except:
    - master

deploy_staging:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Deploy to staging server"
    - ssh $SSH_USERNAME@filsinger.me 'mkdir -p public/filsinger.me/staging'
    - rsync -r public/* $SSH_USERNAME@filsinger.me:public/filsinger.me/staging
  environment:
    name: staging
    url: https://staging.filsinger.me
  only:
    - master

deploy_production:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Deploy to production server"
    - ssh $SSH_USERNAME@filsinger.me 'mkdir -p public/filsinger.me/production'
    - rsync -r public/* $SSH_USERNAME@filsinger.me:public/filsinger.me/production
  environment:
    name: production
    url: https://filsinger.me
  when: manual
  only:
    - master
